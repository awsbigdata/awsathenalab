AWSTemplateFormatVersion: "2010-09-09"
Description:
  This template deploys a Athena excercises.

Mappings:
  RegionMap:
    us-east-1:
      "AMI": "ami-0ff8a91507f77f867"
    us-west-1:
      "AMI": "ami-0bdb828fd58c52235"
    eu-west-1:
      "AMI": "ami-047bb4163c506cd98"
    ap-southeast-1:
      "AMI": "ami-08569b978cc4dfa10"
    ap-northeast-1:
      "AMI": "ami-06cd52961ce9f0d85"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.192.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Athena Exercise

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Athena Exercise

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.192.10.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Athena Exercise Public Subnet (AZ1)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Athena Exercise Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  HttpIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "http-ingress-sg"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Athena Exercise SG

  Ec2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          InstallAndRun:
            - Install
            - Configure
        Install:
          packages:
            yum:
              git: []
        Configure:
          commands:
            clone_github:
              command: !Join
                - ''
                - - su -c "cd /home/ec2-user;git clone https://github.com/awsbigdata/awsathenalab.git" -s /bin/bash ec2-user
            start_server:
              command: !Join
                - ''
                - - su -c "cd /home/ec2-user/awsathenalab;bash install.sh" -s /bin/bash ec2-user
    Properties:
      ImageId:
        Fn::FindInMap:
          - "RegionMap"
          - Ref: "AWS::Region"
          - "AMI"
      InstanceType: t2.medium
      KeyName: "awssupporteast"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 50
            VolumeType: gp2
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "HttpIngressSecurityGroup"
          SubnetId:
            Ref: "PublicSubnet"
      IamInstanceProfile:
            Ref: "RootInstanceProfile"
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2Instance '
            - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              # Signal the status from cfn-init
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource Ec2Instance '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

      Tags:
        - Key: Name
          Value: Athena Exercise

    CreationPolicy:
      ResourceSignal:
        Timeout: "PT5M"



  RootRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "Athena_Exercise_EC2_Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "Athena_Exercise_Policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action: ["dynamodb:*","athena:*","glue:*","iam:*","s3:*"]
            Resource: "*"
      Roles:
        -
          Ref: "RootRole"
  RootInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        -
          Ref: "RootRole"


Outputs:
  InstallURL:
    Value: ''
